From fc92e4b8951cb0109340ff718230da46c9b939f1 Mon Sep 17 00:00:00 2001
From: Neal_Chen <neal_chen@wistron.com>
Date: Sun, 16 Apr 2023 15:44:00 +0800
Subject: [PATCH] common: main: Execute PRECLICOMMAND when stop autoboot

Signed-off-by: Neal_Chen <neal_chen@wistron.com>
---
 common/autoboot.c  | 11 ++++++++---
 common/main.c      |  7 ++++++-
 include/autoboot.h |  4 ++--
 3 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/common/autoboot.c b/common/autoboot.c
index 94133eaeda..36a593c665 100644
--- a/common/autoboot.c
+++ b/common/autoboot.c
@@ -325,16 +325,19 @@ const char *bootdelay_process(void)
 	return s;
 }
 
-void autoboot_command(const char *s)
+int autoboot_command(const char *s)
 {
+	int ret;
+
 	debug("### main_loop: bootcmd=\"%s\"\n", s ? s : "<UNDEFINED>");
 
+	ret = 0;
 	if (stored_bootdelay != -1 && s && !abortboot(stored_bootdelay)) {
 #if defined(CONFIG_AUTOBOOT_KEYED) && !defined(CONFIG_AUTOBOOT_KEYED_CTRLC)
 		int prev = disable_ctrlc(1);	/* disable Control C checking */
 #endif
 
-		run_command_list(s, -1, 0);
+		ret = run_command_list(s, -1, 0);
 
 #if defined(CONFIG_AUTOBOOT_KEYED) && !defined(CONFIG_AUTOBOOT_KEYED_CTRLC)
 		disable_ctrlc(prev);	/* restore Control C checking */
@@ -345,7 +348,9 @@ void autoboot_command(const char *s)
 	if (menukey == CONFIG_MENUKEY) {
 		s = env_get("menucmd");
 		if (s)
-			run_command_list(s, -1, 0);
+			ret = run_command_list(s, -1, 0);
 	}
 #endif /* CONFIG_MENUKEY */
+
+	return ret;
 }
diff --git a/common/main.c b/common/main.c
index ea41b8d281..ee43240567 100644
--- a/common/main.c
+++ b/common/main.c
@@ -58,7 +58,12 @@ void main_loop(void)
 	if (cli_process_fdt(&s))
 		cli_secure_boot_cmd(s);
 
-	autoboot_command(s);
+	if (!autoboot_command(s)) {
+#if defined(CONFIG_PRECLICOMMAND)
+		s = CONFIG_PRECLICOMMAND;
+		run_command_list(s, -1, 0);
+#endif
+	}
 
 	cli_loop();
 	panic("No CLI available");
diff --git a/include/autoboot.h b/include/autoboot.h
index 3ebd6f90e3..7def30e3aa 100644
--- a/include/autoboot.h
+++ b/include/autoboot.h
@@ -31,14 +31,14 @@ const char *bootdelay_process(void);
  *
  * @cmd: Command to run
  */
-void autoboot_command(const char *cmd);
+int autoboot_command(const char *cmd);
 #else
 static inline const char *bootdelay_process(void)
 {
 	return NULL;
 }
 
-static inline void autoboot_command(const char *s)
+static inline int autoboot_command(const char *s)
 {
 }
 #endif
-- 
2.25.1

